vpr /home/Ismael/3DFADE/task/run002/vtr_arch/s38417/Common/arch/vtr_arch.xml s38417.blif --clock_modeling route --write_rr_graph rr_graph.xml --read_rr_graph /home/Ismael/3DFADE/task/designs/rr_graph.xml --route_chan_width

# Read OpenFPGA architecture definition
#read_openfpga_arch -f /home/Ismael/3DFADE/task/run002/vtr_arch/s38417/Common/arch/openfpga_arch.xml

# Read OpenFPGA simulation settings
#read_openfpga_simulation_setting -f /home/Ismael/3DFADE/task/designs/auto_sim_openfpga.xml

# Annotate the OpenFPGA architecture to VPR data base
# to debug use --verbose options
#link_openfpga_arch --activity_file s38417_ace_out.act --3d_sb #--sort_gsb_chan_node_in_edges

# Check and correct any naming conflicts in the BLIF netlist
#check_netlist_naming_conflict --fix --report ./netlist_renaming.xml

# Build the module graph
#  - Enabled compression on routing architecture modules
#  - Enable pin duplication on grid modules
#build_fabric #--compress_routing #--verbose

# Apply fix-up to Look-Up Table truth tables based on packing results
#lut_truth_table_fixup


# Write the fabric hierarchy of module graph to a file
# This is used by hierarchical PnR flows
#write_fabric_hierarchy --file ./fabric_hierarchy.txt

#write_fabric_verilog --file /home/Ismael/3DFADE/task/latest/verilog/SRC --explicit_port_mapping --include_timing --verbose

# Repack the netlist to physical pbs
# This must be done before bitstream generator and testbench generation
# Strongly recommend it is done after all the fix-up have been applied
#repack #--verbose

# Build the bitstream
#  - Output the fabric-independent bitstream to a file
#build_architecture_bitstream --verbose --write_file fabric_independent_bitstream.xml

# Build fabric-dependent bitstream
#build_fabric_bitstream --verbose

# Write fabric-dependent bitstream
#write_fabric_bitstream --file /home/Ismael/3DFADE/task/latest/verilog/SRC/fabric_bitstream.bit --format plain_text

# Write the Verilog testbench for FPGA fabric
#  - We suggest the use of same output directory as fabric Verilog netlists
#  - Must specify the reference benchmark file if you want to output any testbenches
#  - Enable top-level testbench which is a full verification including programming circuit and core logic of FPGA
#  - Enable pre-configured top-level testbench which is a fast verification skipping programming phase
#  - Simulation ini file is optional and is needed only when you need to interface different HDL simulators using openfpga flow-run scripts
#write_full_testbench --file /home/Ismael/3DFADE/task/latest/verilog/SRC --reference_benchmark_file_path s38417_output_verilog.v --explicit_port_mapping --include_signal_init --fabric_netlist_file_path ${OPENFPGA_FABRIC_VERILOG_NETLIST} --bitstream fabric_bitstream.bit

# Write the SDC to run timing analysis for a mapped FPGA fabric
#write_analysis_sdc --file ./SDC_analysis

# Finish and exit OpenFPGA
exit

# Note :
# To run verification at the end of the flow maintain source in ./SRC directory
